package solap;

import java.io.File;

import java.net.MalformedURLException;
import java.net.URL;

import java.util.logging.Level;
import java.util.logging.Logger;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (11.1.1.0.0, build 081105.0700.56405)

@WebServiceClient(wsdlLocation="http://localhost:7101/SOLAP-Server-context-root/SOLAPServerPort?wsdl",
  targetNamespace="http://solap/", name="SOLAPServerService")
public class SOLAPServerService
  extends Service
{
  private static URL wsdlLocationURL;

  private static Logger logger;
  static {
    try
    {
      logger = Logger.getLogger("");
      URL baseUrl = SOLAPServerService.class.getResource(".");
      if (baseUrl == null)
      {
        wsdlLocationURL =
            SOLAPServerService.class.getResource("http://localhost:7101/SOLAP-Server-context-root/SOLAPServerPort?wsdl");
        if (wsdlLocationURL == null)
        {
          baseUrl = new File(".").toURL();
          wsdlLocationURL =
              new URL(baseUrl, "http://localhost:7101/SOLAP-Server-context-root/SOLAPServerPort?wsdl");
        }
      }
      else
      {
        wsdlLocationURL =
            new URL(baseUrl, "http://localhost:7101/SOLAP-Server-context-root/SOLAPServerPort?wsdl");
      }
    }
    catch (MalformedURLException e)
    {
      logger.log(Level.ALL,
          "Failed to create wsdlLocationURL using http://localhost:7101/SOLAP-Server-context-root/SOLAPServerPort?wsdl",
          e);
    }
  }

  public SOLAPServerService()
  {
    super(wsdlLocationURL,
          new QName("http://solap/", "SOLAPServerService"));
  }

  public SOLAPServerService(URL wsdlLocation, QName serviceName)
  {
    super(wsdlLocation, serviceName);
  }

  @WebEndpoint(name="SOLAPServerPort")
  public SOLAPServer getSOLAPServerPort()
  {
    return (SOLAPServer) super.getPort(new QName("http://solap/",
                                                 "SOLAPServerPort"),
                                       SOLAPServer.class);
  }

  @WebEndpoint(name="SOLAPServerPort")
  public SOLAPServer getSOLAPServerPort(WebServiceFeature[] features)
  {
    return (SOLAPServer) super.getPort(new QName("http://solap/",
                                                 "SOLAPServerPort"),
                                       SOLAPServer.class, features);
  }
}
